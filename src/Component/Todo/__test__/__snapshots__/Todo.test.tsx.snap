// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Todo /> should match snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Todo />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": <div
        className="todo-wrapper"
      >
        <form
          data-test="Todo"
          onSubmit={[Function]}
        >
          <br />
          <div
            style={
              Object {
                "alignItems": "center",
                "display": "flex",
                "justifyContent": "center",
              }
            }
          >
            <TextInput
              className="dark-input"
              name="todo"
              onChange={[Function]}
              placeholder="Enter todo"
              style={
                Object {
                  "width": 400,
                }
              }
              value=""
            />
              
            <button
              className="btn btn-success"
              disabled={true}
            >
              Add
            </button>
          </div>
        </form>
        <TodoList
          deleteTodo={[Function]}
          todos={Array []}
          toggleTodo={[Function]}
          updateTodo={[Function]}
        />
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            data-test="Todo"
            onSubmit={[Function]}
          >
            <br />
            <div
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <TextInput
                className="dark-input"
                name="todo"
                onChange={[Function]}
                placeholder="Enter todo"
                style={
                  Object {
                    "width": 400,
                  }
                }
                value=""
              />
                
              <button
                className="btn btn-success"
                disabled={true}
              >
                Add
              </button>
            </div>
          </form>,
          <TodoList
            deleteTodo={[Function]}
            todos={Array []}
            toggleTodo={[Function]}
            updateTodo={[Function]}
          />,
        ],
        "className": "todo-wrapper",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <br />,
              <div
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <TextInput
                  className="dark-input"
                  name="todo"
                  onChange={[Function]}
                  placeholder="Enter todo"
                  style={
                    Object {
                      "width": 400,
                    }
                  }
                  value=""
                />
                  
                <button
                  className="btn btn-success"
                  disabled={true}
                >
                  Add
                </button>
              </div>,
            ],
            "data-test": "Todo",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": "br",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <TextInput
                    className="dark-input"
                    name="todo"
                    onChange={[Function]}
                    placeholder="Enter todo"
                    style={
                      Object {
                        "width": 400,
                      }
                    }
                    value=""
                  />,
                  "  ",
                  <button
                    className="btn btn-success"
                    disabled={true}
                  >
                    Add
                  </button>,
                ],
                "style": Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                },
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "className": "dark-input",
                    "name": "todo",
                    "onChange": [Function],
                    "placeholder": "Enter todo",
                    "style": Object {
                      "width": 400,
                    },
                    "value": "",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "  ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Add",
                    "className": "btn btn-success",
                    "disabled": true,
                  },
                  "ref": null,
                  "rendered": "Add",
                  "type": "button",
                },
              ],
              "type": "div",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "deleteTodo": [Function],
            "todos": Array [],
            "toggleTodo": [Function],
            "updateTodo": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": Symbol(react.fragment),
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": <div
          className="todo-wrapper"
        >
          <form
            data-test="Todo"
            onSubmit={[Function]}
          >
            <br />
            <div
              style={
                Object {
                  "alignItems": "center",
                  "display": "flex",
                  "justifyContent": "center",
                }
              }
            >
              <TextInput
                className="dark-input"
                name="todo"
                onChange={[Function]}
                placeholder="Enter todo"
                style={
                  Object {
                    "width": 400,
                  }
                }
                value=""
              />
                
              <button
                className="btn btn-success"
                disabled={true}
              >
                Add
              </button>
            </div>
          </form>
          <TodoList
            deleteTodo={[Function]}
            todos={Array []}
            toggleTodo={[Function]}
            updateTodo={[Function]}
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <form
              data-test="Todo"
              onSubmit={[Function]}
            >
              <br />
              <div
                style={
                  Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  }
                }
              >
                <TextInput
                  className="dark-input"
                  name="todo"
                  onChange={[Function]}
                  placeholder="Enter todo"
                  style={
                    Object {
                      "width": 400,
                    }
                  }
                  value=""
                />
                  
                <button
                  className="btn btn-success"
                  disabled={true}
                >
                  Add
                </button>
              </div>
            </form>,
            <TodoList
              deleteTodo={[Function]}
              todos={Array []}
              toggleTodo={[Function]}
              updateTodo={[Function]}
            />,
          ],
          "className": "todo-wrapper",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <br />,
                <div
                  style={
                    Object {
                      "alignItems": "center",
                      "display": "flex",
                      "justifyContent": "center",
                    }
                  }
                >
                  <TextInput
                    className="dark-input"
                    name="todo"
                    onChange={[Function]}
                    placeholder="Enter todo"
                    style={
                      Object {
                        "width": 400,
                      }
                    }
                    value=""
                  />
                    
                  <button
                    className="btn btn-success"
                    disabled={true}
                  >
                    Add
                  </button>
                </div>,
              ],
              "data-test": "Todo",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": "br",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <TextInput
                      className="dark-input"
                      name="todo"
                      onChange={[Function]}
                      placeholder="Enter todo"
                      style={
                        Object {
                          "width": 400,
                        }
                      }
                      value=""
                    />,
                    "  ",
                    <button
                      className="btn btn-success"
                      disabled={true}
                    >
                      Add
                    </button>,
                  ],
                  "style": Object {
                    "alignItems": "center",
                    "display": "flex",
                    "justifyContent": "center",
                  },
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "function",
                    "props": Object {
                      "className": "dark-input",
                      "name": "todo",
                      "onChange": [Function],
                      "placeholder": "Enter todo",
                      "style": Object {
                        "width": 400,
                      },
                      "value": "",
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "  ",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Add",
                      "className": "btn btn-success",
                      "disabled": true,
                    },
                    "ref": null,
                    "rendered": "Add",
                    "type": "button",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "deleteTodo": [Function],
              "todos": Array [],
              "toggleTodo": [Function],
              "updateTodo": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": Symbol(react.fragment),
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
